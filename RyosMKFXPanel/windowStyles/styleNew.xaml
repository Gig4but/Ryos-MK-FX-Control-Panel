<Window x:Class="RyosMKFXPanel.windowStyles.styleNew"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RyosMKFXPanel.windowStyles"
        mc:Ignorable="d"
        Closing="Window_Close"
        Title="RyosMKFXPanel" MinHeight="400" MinWidth="644" MaxHeight="400" MaxWidth="644" Background="#FF222222">
    <Window.Resources>
        <Style TargetType="Button" x:Key="ModeButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="4,4,6,12"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Grid.RowSpan" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF444444"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#88333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="SettingsButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="OpacityMask" Value="#DDFFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="OpacityMask" Value="#FFFFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AAFFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="NormalButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="4,0,6,12"/>
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Grid.RowSpan" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FF444444" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,0.75" StartPoint="0.5,0">
                                            <GradientStop Color="#FF333333" Offset="1"/>
                                            <GradientStop Color="#FF444444"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,0.75" StartPoint="0.5,0">
                                            <GradientStop Color="#FF444444" Offset="1"/>
                                            <GradientStop Color="#FF333333"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="EffectButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Grid.RowSpan" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF444444"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#88333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="EffectButtonSelected" BasedOn="{StaticResource EffectButton}">
            <Setter Property="Background" Value="#FF282828"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF2D2D2D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF2D2D2D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="NormalBrush" Color="#FF333333" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF333333" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#88FFFFFF" />
        <SolidColorBrush x:Key="PressedBrush" Color="#FF444444" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FF222222" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF333333" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF333333" />

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1,0"  Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="0,1"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" Background="{StaticResource BackgroundBrush}" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ScrollViewer" x:Key="CustomScrollViewer">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <WrapPanel>
                            <ScrollContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                HorizontalAlignment="Right"/>
                        </WrapPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonRight" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="#FF444444" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButtonLeft" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="{DynamicResource ActualColorBrushAA}" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Polygon Points="10,15 10,5 0,5 0,15 5,20" Fill="#FF222222" StrokeThickness="2" Stroke="#FF333333"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonLeft}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonRight}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar Fill="#FF444444" VerticalAlignment="Bottom" SnapsToDevicePixels="False" Grid.Row="2" Height="4"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NormalTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="BorderBrush" Value="#FF444444"/>
            <Setter Property="Foreground" Value="#AAFFFFFF"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="126"/>
            <RowDefinition Height="130"/>
            <!--><RowDefinition Height="*"/><-->
            <RowDefinition Height="16"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="128"/>
                <ColumnDefinition Width="128"/>
                <ColumnDefinition Width="128"/>
                <ColumnDefinition Width="128"/>
                <ColumnDefinition Width="64"/>
                <ColumnDefinition Width="64"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="68"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button x:Name="ButtonEffects" Grid.Column="0" Style="{StaticResource ModeButton}" Click="ButtonEffects_Click">
                <StackPanel>
                    <Rectangle Width="32" Height="32" x:Name="ButtonEffectsImageBrush" Fill="{DynamicResource ActualColorBrushFF}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/icons/effects32.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="ButtonEffectsText" HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource ActualColorBrushAA}" Text="Effects"/>
                </StackPanel>
            </Button>
            <Button x:Name="ButtonAnimations" Grid.Column="1" Style="{StaticResource ModeButton}" Click="ButtonAnimations_Click">
                <StackPanel>
                    <Rectangle Width="32" Height="32" x:Name="ButtonAnimationsImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/icons/animations32.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="ButtonAnimationsText" HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}">Animations</TextBlock>
                </StackPanel>
            </Button>
            <Button Grid.Column="2" Style="{StaticResource ModeButton}" Opacity="0.5">
                <StackPanel>
                    <Rectangle Width="32" Height="32" x:Name="ButtonCustomImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/icons/custom32.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="ButtonCustomText" HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}">Custom</TextBlock>
                </StackPanel>
            </Button>
            <Button Grid.Column="3" Style="{StaticResource ModeButton}" Opacity="0.5">
                <StackPanel>
                    <Rectangle Width="32" Height="32" x:Name="ButtonGamesImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/icons/games32.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="ButtonGamesText" HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}">Games</TextBlock>
                </StackPanel>
            </Button>
            <Button Grid.Column="5" Style="{StaticResource SettingsButton}" Margin="0,18,32,18">
                <StackPanel>
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#FFFFFFFF"/>
                        </Rectangle.Fill>
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/icons/settings32.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
            <Rectangle x:Name="ModeLighter" Grid.Column="0" Margin="4,0,6,4" Grid.Row="1" OpacityMask="#BF000000">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,0.75" StartPoint="0.5,0">
                        <GradientStop Color="#FF222222" Offset="1"/>
                        <GradientStop Color="{DynamicResource ActualColorFF}"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
        <Rectangle Grid.Row="1" VerticalAlignment="Top" Height="4" Fill="#FF333333"/>
        <WrapPanel Grid.Row="1" Orientation="Horizontal" Margin="0,8,0,0">
            <!--effect choose-->
            <WrapPanel Orientation="Horizontal">
                <WrapPanel Orientation="Vertical" Margin="4,0,0,0">
                    <Label x:Name="LabelMode" Grid.Row="0" Grid.Column="0" Content="Effect:" FontSize="20" Background="{x:Null}" Foreground="#FFDDDDDD" HorizontalAlignment="Center"/>
                    <StackPanel Margin="0,17,0,0" Height="49">
                        <Button x:Name="ButtonLever" Grid.Row="1" Grid.Column="0" Style="{StaticResource NormalButton}" Click="ButtonLever_Click" Width="96">
                            <Label x:Name="ButtonLeverText" Content="Start" FontSize="20" Foreground="{DynamicResource BlackColorBrushAA}" FontWeight="Bold" Margin="0,0,0,2"/>
                        </Button>
                        <Rectangle x:Name="RectangleStatus" OpacityMask="#BF000000" Height="4" Margin="-2,-20,0,0" Width="96">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1.2" StartPoint="0.5,0">
                                    <GradientStop Color="#FF222222" Offset="1"/>
                                    <GradientStop x:Name="RectangleStatusColor" Color="Red"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </StackPanel>
                </WrapPanel>
                <Border Width="162" Height="98"  Margin="4" Background="#FF333333">
                    <Grid>
                        <ScrollViewer x:Name="ScrollEffects" HorizontalAlignment="Left" Style="{StaticResource CustomScrollViewer}" Width="162" Height="98">
                            <WrapPanel>
                                <Button x:Name="ButtonEffectsEqualizer" Click="ButtonEffectsEqualizer_Click" Style="{StaticResource EffectButtonSelected}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonEffectsEqualizerBorder" BorderThickness="2" BorderBrush="{DynamicResource ActualColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonEffectsEqualizerImageBrush" Fill="{DynamicResource ActualColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/equalizer32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonEffectsEqualizerText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource ActualColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Equalizer"/>
                                        </StackPanel>
                                    </Border>
                                </Button>

                                <Button x:Name="ButtonEffectsVolume" Click="ButtonEffectsVolume_Click" Style="{StaticResource EffectButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonEffectsVolumeBorder" BorderThickness="2" BorderBrush="{DynamicResource DefaultColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonEffectsVolumeImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/volume32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonEffectsVolumeText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Volume"/>
                                        </StackPanel>
                                    </Border>
                                </Button>

                                <Button x:Name="ButtonEffectsRandom" Click="ButtonEffectsRandom_Click" Style="{StaticResource EffectButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonEffectsRandomBorder" BorderThickness="2" BorderBrush="{DynamicResource DefaultColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonEffectsRandomImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/random32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonEffectsRandomText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Random"/>
                                        </StackPanel>
                                    </Border>
                                </Button>
                            </WrapPanel>
                        </ScrollViewer >
                        <ScrollViewer x:Name="ScrollAnimations" HorizontalAlignment="Left" Style="{StaticResource CustomScrollViewer}" Width="162" Height="98" Visibility="Hidden" >
                            <WrapPanel>
                                <Button x:Name="ButtonAnimationsTimer" Click="ButtonAnimationsTimer_Click" Style="{StaticResource EffectButtonSelected}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonAnimationsTimerBorder" BorderThickness="2" BorderBrush="{DynamicResource ActualColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonAnimationsTimerImageBrush" Fill="{DynamicResource ActualColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/timer32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonAnimationsTimerText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource ActualColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Timer"/>
                                        </StackPanel>
                                    </Border>
                                </Button>

                                <Button x:Name="ButtonAnimationsSmiles" Click="ButtonAnimationsSmiles_Click" Style="{StaticResource EffectButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonAnimationsSmilesBorder" BorderThickness="2" BorderBrush="{DynamicResource DefaultColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonAnimationsSmilesImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/smile32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonAnimationsSmilesText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Smiles"/>
                                        </StackPanel>
                                    </Border>
                                </Button>

                                <Button x:Name="ButtonAnimationsWaterfall" Click="ButtonAnimationsWaterfall_Click" Style="{StaticResource EffectButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonAnimationsWaterfallBorder" BorderThickness="2" BorderBrush="{DynamicResource DefaultColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonAnimationsWaterfallImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/waterfall32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonAnimationsWaterfallText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Waterfall"/>
                                        </StackPanel>
                                    </Border>
                                </Button>

                                <Button x:Name="ButtonAnimationsNyanCat" Click="ButtonAnimationsNyanCat_Click" Style="{StaticResource EffectButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                    <Border x:Name="ButtonAnimationsNyanCatBorder" BorderThickness="2" BorderBrush="{DynamicResource DefaultColorBrushAA}" Width="64" Height="64">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ButtonAnimationsNyanCatImageBrush" Fill="{DynamicResource DefaultColorBrushFF}">
                                                <Rectangle.OpacityMask>
                                                    <ImageBrush ImageSource="/icons/nyancat32.png"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock x:Name="ButtonAnimationsNyanCatText" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource DefaultColorBrushAA}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="NyanCat"/>
                                        </StackPanel>
                                    </Border>
                                </Button>
                            </WrapPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </WrapPanel>
            <Rectangle Fill="#FF333333" Width="4" Margin="3,-4,0,0"/>
            <WrapPanel Orientation="Vertical" Margin="8,-4,0,0">
                <Grid>
                    <StackPanel x:Name="GroupBoxDelaySetting" Grid.Row="0" Grid.Column="2" Grid.RowSpan="3">
                        <Label x:Name="LabelDelay" HorizontalAlignment="Center" Content="Speed: 3x" FontSize="16" Foreground="#AAFFFFFF"/>
                        <Slider x:Name="SliderDelay" Style="{StaticResource Horizontal_Slider}" Width="124" Margin="0,-4,0,4" SmallChange="1" Minimum="1" Maximum="3" Value="3" ValueChanged="SliderDelay_ValueChanged" IsSnapToTickEnabled="True" TickPlacement="BottomRight" LargeChange="1" TickFrequency="1"/>
                    </StackPanel>
                    <StackPanel x:Name="GroupBoxSpeedSetting" Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Visibility="Hidden">
                        <Label x:Name="LabelSpeed" HorizontalAlignment="Center" Content="Speed: 1,0x" FontSize="16" Foreground="#AAFFFFFF"/>
                        <Slider x:Name="SliderSpeed" Style="{StaticResource Horizontal_Slider}" Width="124" Margin="-4" SmallChange="0.5" Minimum="0.5" Maximum="5" Value="1" ValueChanged="SliderSpeed_ValueChanged" IsSnapToTickEnabled="True" TickPlacement="BottomRight" LargeChange="0.5" TickFrequency="0.5"/>
                    </StackPanel>
                </Grid>
                <Rectangle Fill="#FF333333" Width="158" Margin="-8,-4,-4,0"/>
                <StackPanel>
                    <Label x:Name="LabelBright" HorizontalAlignment="Center" Content="Brightness:  75%" Foreground="#AAFFFFFF" FontSize="16"/>
                    <Slider x:Name="SliderBright" Style="{StaticResource Horizontal_Slider}" Width="124"  SmallChange="1" Minimum="0" Maximum="100" Margin="4,-4,4,4" Value="75"  ValueChanged="SliderBright_ValueChanged" IsSnapToTickEnabled="True" TickFrequency="5" TickPlacement="BottomRight"/>
                </StackPanel>

            </WrapPanel>
            <Rectangle Fill="#FF333333" Width="4" Margin="3,-4,0,0"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label HorizontalAlignment="Center" Grid.Row="0" Content="Color" FontSize="16" Foreground="#AAFFFFFF"/>
                <Grid Grid.Row="1" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label HorizontalAlignment="Right" Grid.Column="0" Content="R:" FontSize="16" Foreground="#66FF0000" Margin="0,-4,0,-1" FontWeight="Bold"/>
                    <TextBox x:Name="TextBoxRed" Grid.Column="1" Width="32" Height="26" Text="0" TextChanged="TextBoxRed_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="3" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    <Label HorizontalAlignment="Right" Grid.Column="2" Content="G:" FontSize="16" Foreground="#6600FF00" Margin="0,-4,0,0" FontWeight="Bold"/>
                    <TextBox x:Name="TextBoxGreen" Grid.Column="3" Width="32" Height="26" Text="255" TextChanged="TextBoxGreen_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="3" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    <Label HorizontalAlignment="Right" Grid.Column="4"  Content="B:" FontSize="16" Foreground="#660000FF" Margin="0,-4,0,0" FontWeight="Bold"/>
                    <TextBox x:Name="TextBoxBlue"  Grid.Column="5" Width="32" Height="26" Text="255" TextChanged="TextBoxBlue_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="3" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                </Grid>
                <WrapPanel Grid.Row="2" HorizontalAlignment="Center">
                    <Label HorizontalAlignment="Right" Content="Hex:" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0" FontWeight="Bold"/>
                    <TextBox x:Name="TextBoxHex" Width="74" Height="26" Text="00FFFF" TextChanged="TextBoxHex_TextChanged" PreviewTextInput="HexValidationTextBox" MaxLength="6" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                </WrapPanel>
            </Grid>
        </WrapPanel>
        <Rectangle Grid.Row="1" VerticalAlignment="Top" Height="4" Fill="#FF333333" Margin="0,116,0,0"/>
        <Grid Grid.Row="2" Margin="8,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Margin="-8,-6,0,0">
                <Rectangle Width="128" Height="32" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF333333" Offset="0"/>
                            <GradientStop Color="#FF222222" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Label Grid.Row="0" Content="Settings" FontSize="20" Foreground="{DynamicResource ActualColorBrushAA}" Margin="4,-6,4,0" HorizontalAlignment="Left"/>
            </Grid>
            <Grid x:Name="GroupBoxEffectEqualizerSettings" Grid.Row="1" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="32"/>
                </Grid.RowDefinitions>
                <WrapPanel Orientation="Horizontal" Grid.Row="0">
                    <Label Content="Frequencies:" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,4,0"/>
                    <TextBox x:Name="TextBoxMinFreq" Width="50" Height="26" Text="20" TextChanged="TextBoxMinFreq_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="5" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    <Label Content=" - " FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    <TextBox x:Name="TextBoxMaxFreq" Width="50" Height="26" Text="2800" TextChanged="TextBoxMaxFreq_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="5" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    <CheckBox x:Name="ChekBoxEffectsEqualizerAntialiasingTurn" Margin="64,6,4,4" Checked="ChekBoxEffectsEqualizerAntialiasingTurn_Checked" Unchecked="ChekBoxEffectsEqualizerAntialiasingTurn_Checked" IsChecked="True">
                        <TextBlock Text="antialiasing" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Grid.Row="1" Margin="0,0,0,0">
                    <CheckBox x:Name="ChekBoxEffectsEqualizerStaticVolumeTurn" Margin="4,10,4,4" Checked="ChekBoxEffectsEqualizerStaticVolumeTurn_Checked" Unchecked="ChekBoxEffectsEqualizerStaticVolumeTurn_UnChecked">
                        <TextBlock Text="static volume border" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                    <WrapPanel x:Name="GroupBoxEffectsEqualizerStaticVolumeSettings" Orientation="Horizontal" Margin="64,4,0,0" Visibility="Hidden">
                        <Label Content="Max. volume:" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                        <TextBox x:Name="TextBoxEffectsEqualizerVolumeBorderSize" Width="50" Height="26" Text="20" TextChanged="TextBoxEffectsEqualizerVolumeBorderSize_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="5" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    </WrapPanel>
                </WrapPanel>
                <WrapPanel x:Name="GroupBoxEffectsEqualizerColumnsSettings" Orientation="Horizontal" Grid.Row="2" Margin="0,0,0,0">
                    <Label Content="Averarge intensity of columns (23 = max):" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,4,0"/>
                    <TextBox x:Name="TextBoxEffectsEqualizerStartColumn" Width="24" Height="26" Text="2" TextChanged="TextBoxEffectsEqualizerStartColumn_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="2" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                    <Label Content=" - " FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    <TextBox x:Name="TextBoxEffectsEqualizerEndColumn" Width="24" Height="26" Text="23" TextChanged="TextBoxEffectsEqualizerEndColumn_TextChanged" PreviewTextInput="NumberValidationTextBox" MaxLength="2" Style="{StaticResource NormalTextBox}" FontSize="16" TextAlignment="Right"/>
                </WrapPanel>
            </Grid>

            <Grid x:Name="GroupBoxEffectVolumeSettings" Grid.Row="1" Visibility="Hidden">
                <WrapPanel>
                    <CheckBox x:Name="ChekBoxVolumeSimple" Margin="4" Checked="ChekBoxVolumeSimple_Checked" Unchecked="ChekBoxVolumeSimple_Checked">
                        <TextBlock Text="simple volume" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                </WrapPanel>
            </Grid>
            <Grid x:Name="GroupBoxEffectRandomSettings" Grid.Row="1" Visibility="Hidden">
                <WrapPanel>
                    <CheckBox x:Name="ChekBoxRandomTurn" Margin="4" Checked="ChekBoxRandomTurn_Checked" Unchecked="ChekBoxRandomTurn_Checked">
                        <TextBlock Text="on/off leds" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                </WrapPanel>
            </Grid>
            <Grid x:Name="GroupBoxAnimationTimerSettings" Grid.Row="1" Visibility="Hidden">
                <WrapPanel>
                    <CheckBox x:Name="ChekBoxTimerSimple" Margin="4" Checked="ChekBoxTimerSimple_Checked" Unchecked="ChekBoxTimerSimple_Checked">
                        <TextBlock Text="simple numbers" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                    <CheckBox x:Name="ChekBoxTimerInvert" Margin="4" Checked="ChekBoxTimerInvert_Checked" Unchecked="ChekBoxTimerInvert_Checked">
                        <TextBlock Text="with invert colors" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                    </CheckBox>
                </WrapPanel>
            </Grid>
            <Grid x:Name="GroupBoxAnimationWaterfallSettings" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <CheckBox x:Name="ChekBoxWaterfallTail" Grid.Row="0" Grid.Column="0" Margin="4" Checked="ChekBoxWaterfallTail_Checked" Unchecked="ChekBoxWaterfallTail_Checked" IsChecked="True">
                    <TextBlock Text="tail" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                </CheckBox>
                <GroupBox Grid.Row="0" Grid.Column="1" x:Name="GroupBoxWaterfallTailLengthSettings" BorderBrush="{x:Null}" Margin="4" Visibility="Hidden">
                    <WrapPanel>
                        <Label Content="Tail length:"/>
                        <TextBox x:Name="TextBoxWaterfallTailLength" Width="30" Height="20" Text="5" TextChanged="TextBoxWaterfallTailLength_TextChanged" VerticalAlignment="Center"/>
                    </WrapPanel>
                </GroupBox>
                <CheckBox x:Name="ChekBoxWaterfallInvert" Grid.Row="1" Grid.Column="0" Margin="4" Checked="ChekBoxWaterfallInvert_Checked" Unchecked="ChekBoxWaterfallInvert_Checked">
                    <TextBlock Text="reverse" FontSize="16" Foreground="#88FFFFFF" Margin="0,-4,0,0"/>
                </CheckBox>
                <CheckBox x:Name="ChekBoxWaterfallHorizontal" Grid.Row="1" Grid.Column="1" Content="horizontal" Margin="4" Checked="ChekBoxWaterfallHorizontal_Checked" Unchecked="ChekBoxWaterfallHorizontal_Checked" Visibility="Hidden"/>
                <CheckBox x:Name="ChekBoxWaterfallDiagonal" Grid.Row="2" Grid.Column="0" Content="diagonal" Margin="4" Checked="ChekBoxWaterfallDiagonal_Checked" Unchecked="ChekBoxWaterfallDiagonal_Checked" Visibility="Hidden"/>
            </Grid>
        </Grid>
        <Label Grid.Row="3" Content="Creator: Oleg Petruny" HorizontalAlignment="Left" Background="{x:Null}" Foreground="#AAFFFFFF" VerticalAlignment="Top" Height="30" Margin="0,0,0,-13"/>
        <Label Grid.Row="3" Content="version: 2.8" HorizontalAlignment="Right" Background="{x:Null}" Foreground="#AAFFFFFF" Grid.Column="1" VerticalAlignment="Top" Margin="0,0,0,-13"/>
    </Grid>
</Window>